class Task:

    def __init__(self, name, due_date):
        self.name = name
        self.due_date = due_date
        self.comments = []
        self.completed = False

    def change_name(self, new_name):
        if new_name != self.name:
            self.name = new_name
            return new_name
        return 'Name cannot be the same.'

    def change_due_date(self, new_date):
        if self.due_date != new_date:
            self.due_date = new_date
            return new_date
        return 'Date cannot be the same'

    def add_comment(self, comment):
        self.comments.append(comment)

    def edit_comment(self, comment_number, new_comment):
        try:
            self.comments[comment_number] = new_comment
            return f'{", ".join([c for c in self.comments])}'

        except IndexError:
            return 'Cannot find comment.'

    def details(self):
        return f'Name: {self.name} - Due Date: {self.due_date}'

---------------------------------------------------------------------------------------------------------------------------

from project.task import Task


class Section:

    def __init__(self, name):
        self.name = name
        self.tasks = []

    def add_task(self, new_task):
        if new_task not in self.tasks:
            self.tasks.append(new_task)
            return f'Task {new_task.details()} is added to the section'
        return f'Task is already in the section {self.name}'

    def complete_task(self, task_name):
        for t in self.tasks:
            if t.name == task_name:
                t.completed = True
                return f'Completed task {task_name}'
        return f'Could not find task with the name {task_name}'

    def clean_section(self):
        t_removed = 0
        for t in self.tasks:
            if t.completed:
                self.tasks.remove(t)
                t_removed += 1
        return f'Cleared {t_removed} tasks.'

    def view_section(self):
        tasks_repr = '\n'.join([t.details() for t in self.tasks])
        return f'Section {self.name}: \n{tasks_repr}'


task = Task("Make bed", "27/05/2020")
print(task.change_name("Go to University"))
print(task.change_due_date("28.05.2020"))
task.add_comment("Don't forget laptop")
print(task.edit_comment(0, "Don't forget laptop and notebook"))
print(task.details())
section = Section("Daily tasks")
print(section.add_task(task))
second_task = Task("Make bed", "27/05/2020")
section.add_task(second_task)
print(section.clean_section())
print(section.view_section())
